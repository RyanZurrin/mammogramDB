import sys

sys.path.insert(0, "../..")
import omama as O
import collections
from collections import Counter, OrderedDict as od

dhruv_A = [
    136,
    182,
    196,
    199,
    233,
    244,
    208,
    209,
    228,
    236,
    245,
    336,
    365,
    385,
    386,
    388,
    484,
    605,
    627,
    713,
    743,
    754,
    762,
    764,
    767,
    776,
    792,
    793,
    718,
    789,
    741,
    807,
    829,
    846,
    847,
    853,
    882,
    898,
    879,
    936,
    953,
    972,
    976,
]
dhruv_B = [
    113,
    137,
    138,
    147,
    152,
    190,
    249,
    272,
    279,
    305,
    342,
    393,
    408,
    412,
    416,
    452,
    462,
    497,
    537,
    552,
    578,
    589,
    590,
    521,
    611,
    661,
    672,
    663,
    706,
    720,
    828,
    810,
    860,
    892,
    904,
    922,
    959,
    963,
    960,
    990,
]
jenna_A = [
    136,
    182,
    196,
    199,
    208,
    209,
    228,
    233,
    236,
    244,
    245,
    304,
    311,
    336,
    365,
    385,
    386,
    388,
    484,
    534,
    544,
    560,
    575,
    585,
    596,
    605,
    700,
    713,
    718,
    741,
    743,
    754,
    762,
    764,
    767,
    776,
    789,
    792,
    793,
    807,
    829,
    846,
    847,
    853,
    879,
    882,
    898,
    936,
    953,
    972,
    975,
]
jenna_B = [
    113,
    137,
    138,
    142,
    147,
    190,
    249,
    272,
    279,
    305,
    342,
    393,
    408,
    412,
    416,
    452,
    462,
    497,
    521,
    537,
    547,
    552,
    578,
    589,
    590,
    611,
    661,
    663,
    672,
    706,
    720,
    748,
    810,
    828,
    860,
    892,
    904,
    922,
    59,
    960,
    963,
    990,
]
pablo_A = [
    136,
    182,
    199,
    196,
    208,
    209,
    228,
    236,
    233,
    244,
    245,
    304,
    311,
    336,
    365,
    385,
    386,
    388,
    484,
    534,
    544,
    560,
    575,
    585,
    596,
    605,
    713,
    743,
    754,
    764,
    762,
    776,
    789,
    792,
    793,
    807,
    853,
    898,
    847,
    846,
    829,
    882,
    879,
    975,
    953,
    972,
    936,
]
pablo_B = [
    113,
    137,
    138,
    147,
    142,
    190,
    249,
    272,
    279,
    305,
    342,
    393,
    408,
    416,
    412,
    452,
    462,
    497,
    521,
    537,
    547,
    552,
    578,
    589,
    590,
    611,
    661,
    663,
    672,
    706,
    720,
    748,
    810,
    828,
    860,
    892,
    904,
    922,
    959,
    963,
    960,
    990,
]
lori_A = [
    136,
    182,
    199,
    208,
    209,
    228,
    233,
    244,
    236,
    284,
    304,
    336,
    321,
    365,
    385,
    386,
    388,
    403,
    447,
    494,
    534,
    554,
    560,
    575,
    585,
    579,
    596,
    605,
    637,
    713,
    743,
    754,
    764,
    762,
    774,
    786,
    799,
    792,
    793,
    807,
    829,
    846,
    847,
    853,
    882,
    898,
    936,
    953,
    972,
    975,
]
lori_B = [
    123,
    137,
    147,
    138,
    282,
    259,
    289,
    305,
    342,
    393,
    365,
    408,
    412,
    416,
    452,
    497,
    537,
    562,
    578,
    590,
    599,
    611,
    607,
    671,
    682,
    706,
    720,
    758,
    810,
    828,
    860,
    892,
    878,
    904,
    932,
    960,
    963,
    959,
    990,
]
ryan_A = [
    136,
    182,
    196,
    197,
    199,
    208,
    209,
    228,
    233,
    236,
    244,
    245,
    261,
    274,
    276,
    279,
    304,
    311,
    336,
    365,
    385,
    386,
    388,
    403,
    447,
    448,
    456,
    484,
    534,
    541,
    544,
    559,
    560,
    575,
    579,
    585,
    596,
    605,
    627,
    700,
    713,
    718,
    741,
    743,
    754,
    762,
    764,
    767,
    776,
    789,
    792,
    793,
    807,
    829,
    846,
    847,
    849,
    853,
    879,
    882,
    898,
    936,
    953,
    957,
    971,
    976,
    975,
]
ryan_B = [
    113,
    137,
    138,
    142,
    147,
    182,
    190,
    221,
    249,
    272,
    305,
    342,
    365,
    393,
    408,
    412,
    416,
    452,
    462,
    497,
    521,
    537,
    547,
    552,
    574,
    578,
    579,
    589,
    590,
    607,
    611,
    661,
    663,
    672,
    706,
    720,
    748,
    810,
    828,
    860,
    878,
    892,
    904,
    922,
    928,
    959,
    960,
    963,
    990,
]
jaink_A = [
    112,
    136,
    182,
    196,
    199,
    208,
    209,
    228,
    233,
    236,
    244,
    245,
    261,
    274,
    276,
    279,
    304,
    311,
    336,
    385,
    386,
    388,
    447,
    484,
    534,
    544,
    560,
    575,
    579,
    585,
    596,
    605,
    627,
    628,
    713,
    741,
    743,
    754,
    762,
    764,
    767,
    77,
    789,
    792,
    793,
    807,
    829,
    846,
    847,
    849,
    853,
    879,
    882,
    898,
    936,
    953,
    971,
    972,
    975,
]
jaink_B = [
    113,
    137,
    138,
    142,
    147,
    190,
    221,
    249,
    271,
    279,
    305,
    342,
    365,
    393,
    408,
    412,
    416,
    452,
    462,
    497,
    521,
    537,
    547,
    552,
    574,
    578,
    579,
    589,
    590,
    607,
    611,
    661,
    672,
    706,
    720,
    748,
    810,
    828,
    860,
    878,
    892,
    904,
    922,
    959,
    960,
    963,
    990,
]
josh_A = [
    136,
    182,
    196,
    197,
    199,
    208,
    209,
    215,
    238,
    233,
    236,
    244,
    245,
    261,
    274,
    276,
    279,
    304,
    311,
    336,
    365,
    385,
    386,
    388,
    448,
    456,
    484,
    534,
    544,
    560,
    575,
    585,
    596,
    605,
    627,
    628,
    700,
    713,
    718,
    741,
    743,
    754,
    762,
    764,
    767,
    776,
    789,
    792,
    793,
    807,
    829,
    846,
    847,
    849,
    853,
    879,
    882,
    898,
    936,
    953,
    971,
    972,
    975,
    995,
]
josh_B = [
    113,
    137,
    138,
    147,
    190,
    221,
    249,
    272,
    279,
    305,
    337,
    342,
    365,
    393,
    408,
    412,
    416,
    452,
    462,
    497,
    521,
    537,
    547,
    552,
    578,
    589,
    590,
    607,
    611,
    661,
    663,
    672,
    706,
    720,
    748,
    810,
    828,
    860,
    878,
    892,
    904,
    922,
    928,
    959,
    960,
    963,
    990,
]
neha_A = [
    122,
    136,
    182,
    196,
    197,
    199,
    208,
    209,
    228,
    233,
    236,
    244,
    245,
    261,
    274,
    276,
    279,
    304,
    311,
    336,
    365,
    385,
    386,
    388,
    399,
    403,
    447,
    448,
    456,
    484,
    500,
    534,
    541,
    544,
    560,
    575,
    579,
    585,
    596,
    605,
    700,
    713,
    718,
    741,
    743,
    754,
    762,
    764,
    767,
    776,
    789,
    792,
    793,
    807,
    829,
    846,
    847,
    849,
    853,
    879,
    882,
    898,
    936,
    953,
    957,
    971,
    972,
    975,
    995,
]
neha_B = [
    113,
    137,
    138,
    142,
    147,
    182,
    190,
    221,
    249,
    272,
    279,
    305,
    342,
    365,
    393,
    408,
    412,
    416,
    452,
    462,
    497,
    521,
    537,
    547,
    552,
    574,
    578,
    579,
    589,
    590,
    606,
    607,
    611,
    661,
    663,
    672,
    706,
    720,
    748,
    810,
    828,
    860,
    878,
    892,
    904,
    922,
    928,
    959,
    960,
    963,
    990,
]

all_A = jenna_A + pablo_A + lori_A + ryan_A + dhruv_A + jaink_A + josh_A + neha_A
all_B = jenna_B + pablo_B + lori_B + ryan_B + dhruv_B + jaink_B + josh_B + neha_B

results_A = Counter(all_A)
results_A = od(sorted(results_A.items(), key=lambda kv: kv[1], reverse=True))

results_B = Counter(all_B)
results_B = od(sorted(results_B.items(), key=lambda kv: kv[1], reverse=True))

# ground truths for A and B are any index with 4 or more votes
ground_truth_A = [k for k, v in results_A.items() if v >= 4]
ground_truth_B = [k for k, v in results_B.items() if v >= 4]

# read in a test file of paths and store in a list where each line is an element and do in a one liner
test_pathsA = [line.rstrip("\r ") for line in open("testA.txt")]
test_pathsB = [line.rstrip("\r ") for line in open("testB.txt")]

# make a list of paths that use the indices in the ground truth
ground_truth_paths_A = [test_pathsA[i] for i in ground_truth_A]
ground_truth_paths_B = [test_pathsB[i] for i in ground_truth_B]
# add both list together
ground_truth_paths = ground_truth_paths_A + ground_truth_paths_B

ground_truth_sopuids = [path.split("/")[-1].strip() for path in ground_truth_paths]
# remove the DXm. from the sopuids and newlines
ground_truth_sopuids = [sopuid.replace("DXm.", "") for sopuid in ground_truth_sopuids]
